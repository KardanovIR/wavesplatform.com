daemon off;

worker_processes 4;

events { worker_connections 1024; }



http {
      proxy_cache_path /tmp/cache levels=1:2 keys_zone=STATIC:30m max_size=1g;
      proxy_temp_path /tmp/cache/tmp;


      # security
      add_header X-Frame-Options SAMEORIGIN;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      # add_header Content-Security-Policy "default-src 'self'";


      # log_format static-log 'STATIC $request';
      # log_format backend-log 'Backend requested';


      gzip on;
      gzip_comp_level 6;
      gzip_vary on;
      gzip_min_length  1400;
      gzip_proxied any;
      gzip_types text/plain application/javascript image/svg+xml application/json;
      gzip_buffers 16 8k;



      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_http_version 1.1;


      proxy_cache STATIC;
      # proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;


      ssl_certificate         /etc/nginx/wavesplatform.pem;
      ssl_certificate_key     /etc/nginx/wavesplatform.key;


      upstream balancer {
            server balancer:80;
      }

      upstream static {
            server static:3001;
      }

      server {
            server_tokens off;
            listen 80 default_server;
	      listen [::]:80 default_server;
	      server_name _;
	      return 301 https://$host$request_uri;
      }

      server {
            server_tokens off;
            server_name www.${SERVER_NAME} beta.wavesplatform.com;
            listen 443 ssl;
	      return 301 https://${SERVER_NAME}$request_uri;
      }

      server {
            server_tokens off;
            server_name waves-ng.${SERVER_NAME};
            listen 443 ssl;

            error_page 400 500 502 503 504 /500.html;

            location = /500.html {
                root /usr/share/nginx/html;
                internal;
            }

            location /static {
                  proxy_pass http://static;
                  add_header X-Proxy-Cache $upstream_cache_status;
									proxy_cache_bypass $http_cache_control;
                  proxy_cache_valid  200 302 1d;
            }

            location / {
                  proxy_pass http://balancer/subdomains/waves-ng;
                  proxy_intercept_errors on;
                  add_header X-Proxy-Cache $upstream_cache_status;
                  proxy_cache_bypass $http_cache_control;
                  proxy_cache_valid  200 302 5m;
                  proxy_cache_valid  404 30d;
            }
      }

      server {
            server_tokens off;

            server_name ${SERVER_NAME};

            listen 443 ssl;

            error_page 400 500 502 503 504 /500.html;

            location = /500.html {
                root /usr/share/nginx/html;
                internal;
            }

            location /static {
                  proxy_pass http://static;
                  # access_log /dev/stdout static-log;
									proxy_cache_bypass $http_cache_control;
                  add_header X-Proxy-Cache $upstream_cache_status;
                  proxy_cache_valid  200 302 1d;
            }

            location /files/ {
                  proxy_http_version     1.1;
                  proxy_set_header       Connection "";
                  proxy_set_header       Authorization '';
                  proxy_set_header       Host s3.ca-central-1.amazonaws.com;
                  proxy_hide_header      x-amz-id-2;
                  proxy_hide_header      x-amz-request-id;
                  proxy_hide_header      x-amz-meta-server-side-encryption;
                  proxy_hide_header      x-amz-server-side-encryption;
                  proxy_hide_header      Set-Cookie;
                  proxy_ignore_headers   Set-Cookie;
                  proxy_cache_revalidate on;
                  proxy_intercept_errors on;
                  proxy_cache_use_stale  error timeout updating http_500 http_502 http_503 http_504;
                  proxy_cache_lock       on;
                  add_header             Cache-Control max-age=31536000;
                  add_header             X-Cache-Status $upstream_cache_status;
                  proxy_pass             https://s3.ca-central-1.amazonaws.com/wavesdb.com/;
                  proxy_cache_valid      200 302 7d;
            }

            location /waves-ng {
                  return 302 https://waves-ng.${SERVER_NAME}/;
            }

            # block /subdomains route only on production
            if ($SERVER_NAME = "wavesplatform.com") {
                location /subdomains {
                    proxy_pass http://balancer/404;
                    add_header X-Proxy-Cache $upstream_cache_status;
                    proxy_cache_valid  404 30d;
                }
            }
           


            location / {
                  proxy_pass http://balancer;
                  proxy_intercept_errors on;
                  # access_log /dev/stdout backend-log;
                  add_header X-Proxy-Cache $upstream_cache_status;
                  proxy_cache_bypass $http_cache_control;
                  proxy_cache_valid  200 302 5m;
                  proxy_cache_valid  404 30d;
            }
      }
}
